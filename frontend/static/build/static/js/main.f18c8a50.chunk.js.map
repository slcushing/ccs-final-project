{"version":3,"sources":["components/PrivateRoute/PrivateRoute.js","components/Registration/RegistrationForm.js","components/Login/LoginForm.js","components/Header/MainHeader.js","components/Landing/LandingPage.js","components/Dashboard/DashCalendar.js","components/Dashboard/TaskList.js","components/Dashboard/Dashboard.js","components/Header/DashboardHeader.js","components/Calendar/CommunityCalendar.js","components/Workout/Sessions.js","components/Workout/Workout.js","components/Clients/Clients.js","components/Profile/ProfileForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","isAuth","Component","component","props","to","withRouter","useState","username","email","password1","password2","user","setUser","setError","handleInput","event","target","name","value","prevState","handleError","error","console","warn","a","preventDefault","log","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","ok","json","data","set","key","history","push","className","onSubmit","htmlFor","type","id","placeholder","required","onChange","password","isAdmin","is_staff","Header","src","alt","onClick","handleLogout","defaultEvent","title","start","end","allDay","gymEvent","details","locales","enUS","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","show","setShow","events","setEvents","setEvent","handleChange","checked","e","Date","updatedEvents","index","findIndex","splice","useEffect","formatedEvents","map","getEvents","handleClose","selectable","startAccessor","endAccessor","min","max","defaultView","views","onSelectSlot","onSelectEvent","style","height","Modal","onHide","closeButton","Title","Body","Form","Group","Label","Control","autoComplete","plaintext","readOnly","Check","label","Footer","Button","variant","TaskDetail","isEditing","setIsEditing","task","text","editText","setEditText","complete","toggleCompletion","updatedTask","handleUpdate","handleDelete","tasks","setTasks","setText","getTasks","updatedTasks","currentTarget","TaskListHTML","today","formattedDate","is_registered","useParams","filter","sessions","setSessions","session","toDateString","values","updatedSessions","Error","forEach","toString","getSessions","handleOpen","days","Object","keys","sessionsHTML","day","handleRegister","attendees","attendee","first_name","WorkoutDetail","workout","editWorkout","setEditWorkout","date","rows","cols","workouts","setWorkouts","toISOString","substr","setDate","getWorkouts","updatedWorkouts","WorkoutListHTML","as","ClientDetail","client","coach_notes","coachNote","setCoachNote","handleSave","Card","CardContent","avatar","last_name","phone_number","member_notes","disabled","coach_name","CardActionArea","Clients","clients","setClients","searchClients","setSearchClients","filteredResults","setFilteredResults","getClients","clientID","ClientHTML","computedMatch","params","is_client","filteredData","checkValues","join","toLowerCase","includes","profile","setProfile","preview","setPreview","getProfile","formData","FormData","append","File","file","files","reader","FileReader","onloadend","result","readAsDataURL","useHistory","remove","checkAuth","Spinner","animation","MainHeader","path","render","ProfileForm","Dashboard","CommunityCalendar","Workout","exact","LandingPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f18c8a50.chunk.js","sourcesContent":["import {Redirect} from 'react-router-dom'\n\nfunction PrivateRoute({ isAuth, component: Component, ...props }) {\n  return isAuth ? (\n    <Component isAuth={isAuth} {...props} />\n  ) : (\n    <Redirect to=\"/login\" />\n  );\n}\n\nexport default PrivateRoute;","import {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction RegistrationForm(props) {\n    const [user,setUser] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2:'',\n    });\n\n    const [error, setError] = useState(null)\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    function handleError(error) {\n        console.warn(error)\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        console.log('user', user)\n        if(user.password1 !== user.password2) {\n            setError('Passwords do not match!')\n        } else {\n            const options = {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n                body: JSON.stringify(user)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setUser((prevState) => ({\n                    ...prevState, isAuth: true,\n                }));\n                props.history.push('/profile');\n            }\n        }\n    }\n\n    // if(props.isAuth) {\n    //     return <Redirect to='/' />\n    // }\n\n    return (\n        <div className='register-container'>\n            <form className='col-4 offset-lg-4 register-form' onSubmit={handleSubmit}>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='username'>Username</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='username'\n                        placeholder='Enter Username'\n                        required\n                        name='username'\n                        value={user.username}\n                        onChange={handleInput}\n                        />\n                </div>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='email'>Email</label>\n                    <input\n                        type='email'\n                        className='form-control'\n                        id='email'\n                        placeholder='Enter Email'\n                        required\n                        name='email'\n                        value={user.email}\n                        onChange={handleInput}\n                        />\n                </div><div className='form-group text-left mb-3'>\n                    <label htmlFor='password1'>Password</label>\n                    <input\n                        type='password'\n                        className='form-control'\n                        id='password1'\n                        placeholder='Enter Password'\n                        required\n                        name='password1'\n                        value={user.password1}\n                        onChange={handleInput}\n                        />\n                </div>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='password2'>Confirm Password</label>\n                    <input\n                        type='password'\n                        className='form-control'\n                        id='password2'\n                        placeholder='Confirm Password'\n                        required\n                        name='password2'\n                        value={user.password2}\n                        onChange={handleInput}\n                        />\n                </div>\n                <button type='submit' className='btn btn-danger mt-3' id='register-button'>Register</button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm)","import {useState} from 'react';\nimport {withRouter, Redirect, Link} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props) {\n    const [user, setUser] = useState({\n        username: '',\n        password: '',\n    });\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method:'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(user)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`);\n            props.setUser((prevState) => ({\n                ...prevState,\n                isAuth: true, \n                isAdmin: data.user.is_staff,\n                username: data.user.username,\n            }));\n            if(data.user.is_staff) {\n                props.history.push('/dashboard/');\n            } else {\n                props.history.push('/workouts/'); \n            }\n            \n        }\n    }\n\n    if(props.isAuth && props.isAdmin) {\n        return <Redirect to='/dashboard' />\n    }\n\n    if(props.isAuth) {\n        return <Redirect to='/workouts' />\n    }\n\n    return (\n        <div className=\"login-container\">\n            <form className='col-4 offset-lg-4 login-form' onSubmit={handleSubmit}>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='username'>Username</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='username'\n                        placeholder='Enter Username'\n                        onChange={handleInput}\n                        required\n                        name='username'\n                        value={user.username}\n                        />\n                </div>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='password'>Password</label>\n                    <input\n                        type='password'\n                        className='form-control'\n                        id='password'\n                        placeholder='Enter Password'\n                        onChange={handleInput}\n                        required\n                        name='password'\n                        value={user.password}\n                        />\n                </div>\n                <button type='submit' className='btn btn-danger' id='login-button'>Login</button>\n                <div>Not a member yet? Register <Link to='/registration'>here.</Link></div>\n            </form>\n            \n\n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { MdLogout } from 'react-icons/md';\n\nfunction Header(props) {\n    return(\n        <nav className='navbar navbar-expand-lg' id='header-nav'>\n            <div className='container-fluid'>\n                <img className='navbar-brand' src='https://static1.squarespace.com/static/5fd13e0a92170d49d8b2c1e1/t/5fd6a3389264095525ddb611/1629747281826/' alt='logo'/>\n                \n                {props.isAuth && (\n                    <button type='submit' className='logout' onClick={() => props.handleLogout()}>Logout <MdLogout/></button>\n                )}\n                \n                \n            </div> \n\n        </nav>\n    )\n}\n\nexport default Header","import { NavLink, withRouter } from 'react-router-dom';\n\nfunction LandingPage() {\n    return (\n        <>\n        <div className='landing-body'>\n            <section>\n                <div>Where fitness + performance collide.</div>\n                <div id=\"landing-welcome\">Welcome to the Factory.</div>\n            </section>\n            <aside>\n                <h4>New to the Factory?</h4>\n                <div className='landing-atag'>\n                    <NavLink to='/registration'>Register Here</NavLink>\n                </div>\n                <h4>Back for more?</h4>\n                <div className='landing-atag'>\n                    <NavLink to='/login'>Login Here</NavLink>\n                </div>\n            </aside>\n        </div>\n        </>\n    )\n}\n\nexport default withRouter(LandingPage)","import {useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Modal, Button, Form} from 'react-bootstrap'\nimport Cookies from 'js-cookie';\n\n\n\nconst defaultEvent = {\n    title:'',\n    start: null,\n    end: null,\n    allDay: false,\n    gymEvent: false,\n    details:'',\n}\n\nconst locales = {\n    'en-US': enUS\n};\n\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\n\nfunction DashCalendar() {\n    const [show, setShow] = useState(false);\n    const [events, setEvents] = useState();\n    const [event, setEvent] = useState(defaultEvent);\n\n    // const history = useHistory()\n    \n    const handleChange = (event) => {\n       \n        if(event.target.type === \"checkbox\") {\n            setEvent((prevState) => ({\n                ...prevState,\n                [event.target.name]: event.target.checked,\n            }));\n            return;\n        }\n       \n        const { name, value } = event.target;\n        setEvent((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    useEffect(() => {\n        async function getEvents() {\n            const response = await fetch(`/api_v1/events/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                const formatedEvents = data.map(event => ({...event, start: new Date(event.start), end: new Date(event.end)}));\n                setEvents(formatedEvents);\n                console.log(formatedEvents)\n            }\n        }\n        getEvents();\n    },[]);\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e){\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/?type=coach`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.start = new Date(data.start);\n            data.end = new Date(data.end);\n            setShow(false);\n            setEvent(defaultEvent);\n            setEvents([...events, data]);\n        }\n    }\n\n    async function handleUpdate() {\n        \n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/${event.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            setShow(false);\n            const updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents[index] = event;\n            setEvents(updatedEvents);\n            setEvent(defaultEvent);\n        }\n    }\n\n    async function handleDelete() {\n        const response = await fetch(`/api_v1/events/${event.id}/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);  \n            setShow(false);\n        }\n    }\n\n    async function handleCancel() {\n        const response = await fetch(`api_v1/events/${event.id}/cancellation/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n            },\n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id == event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);\n            setShow(false);\n        }\n    }\n\n    const handleClose = () => {\n        setShow(false);\n        setEvent(defaultEvent);\n    }\n    const handleSelection = (event) => {\n        setShow(true);\n        setEvent((prevState) => ({\n            ...prevState,\n            start: event.start,\n            end: event.end,\n        }));\n        \n    }\n\n    const handleEventSelect = (event) => {\n        setEvent({\n            ...event, \n            title: event.title,\n            start: event.start,\n            end: event.end,\n            details: event.details,\n        });\n        setShow(true);\n    }\n    \n    \n    if(!events) {\n        return <div>loading spinner</div>\n    }\n    return (\n        <>\n            <div className=\"daily-cal\">\n                <Calendar\n                    selectable={true}\n                    localizer={localizer}\n                    events={events}\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    min={new Date(0,0,0,5,0,0)}\n                    max={new Date(0,0,0,22,0,0)}\n                    defaultView={\"week\"}\n                    views={['week', 'day']}\n                    onSelectSlot={handleSelection}\n                    onSelectEvent={handleEventSelect}\n                    style={{ height: 900 }}\n                    />\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Title: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"title\" value={event.title} autoComplete='off' placeholder='Event Title'></Form.Control>\n                        <Form.Label>Start: </Form.Label><Form.Control plaintext readOnly name=\"start\" value={event.start}></Form.Control>\n                        <Form.Label>End: </Form.Label><Form.Control plaintext readOnly name=\"end\" value={event.end}></Form.Control>\n                        <Form.Label>Details: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"details\" value={event.details} autoComplete='off' placeholder='Event details...'></Form.Control>\n                        <Form.Check type='checkbox' label='All Day' name=\"allDay\" checked={event.allDay} onChange={handleChange}></Form.Check>\n                        <Form.Check type='checkbox' label='Community Event' name=\"gymEvent\" checked={event.gymEvent} onChange={handleChange}></Form.Check>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    {event.id\n                    ? \n                    <>\n                        <Button type='button' variant='info' onClick={handleCancel}>Cancel Event</Button>\n                        <Button type='button' variant='warning' onClick={handleUpdate} >Update</Button>\n                        <Button type='button' variant='dark' onClick={handleDelete}>Delete</Button>\n                    </>\n                    :\n                        <Button type='button' variant='success' onClick={handleSubmit}>Save</Button>\n                    }\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default withRouter(DashCalendar)","import { withRouter } from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport Cookies from 'js-cookie';\nimport {Modal, Button, Form} from 'react-bootstrap';\nimport { FaRegEdit, FaTrash, FaPlusSquare } from 'react-icons/fa';\nimport { BsSave } from \"react-icons/bs\";\n\nfunction TaskDetail(props) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editText, setEditText] = useState(props.task.text);\n    const {id, text, complete} = props.task;\n\n    const handleChange = (event) => {\n        setEditText(event.target.value);\n    }\n\n    const handleUpdate = (event) => {\n        const updatedTask = {...props.task, text: editText}\n        props.handleUpdate(updatedTask);\n        setIsEditing(false);\n    }\n\n    return (\n        <div className='task-item'>\n            <input type='checkbox' checked={complete} name=\"complete\" onChange={props.toggleCompletion} value={id} />\n            {\n                isEditing ?\n                <input type=\"text\" name=\"editText\" value={editText} onChange={handleChange} /> :\n                <label>{text}</label>\n            }\n           \n            {\n                isEditing ? \n                <button type='button' className='save-task-btn' onClick={handleUpdate}><BsSave/></button> :\n                <button type='button' className='edit-task-btn' onClick={() => setIsEditing(true)}><FaRegEdit/></button>\n            }\n            <button type='button' className='delete-task-btn' onClick={props.handleDelete} value={id}><FaTrash/></button>\n        </div>\n    )\n}\n\n\nfunction TaskList(props) {\n    const [tasks, setTasks] = useState([]);\n    const [show, setShow] = useState(false);\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        async function getTasks() {\n            const response = await fetch(`/api_v1/tasks/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                \n                setTasks(data);\n            }\n        }\n        getTasks();\n    }, []);\n\n    const handleUpdate = async (task) => {\n        // console.log('are you updated', task);\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(task)\n        };\n\n        const response = await fetch(`/api_v1/tasks/${task.id}/`, options);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const updatedTasks = [...tasks];\n            const index = updatedTasks.findIndex(e => e.id === task.id);\n            updatedTasks[index] = task;\n            setTasks(updatedTasks);\n\n        }\n    }\n\n    const handleDelete = async (event) => {\n        const id = event.currentTarget.value;\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(`/api_v1/tasks/${id}/`, options);\n        if (!response.ok) {\n            console.log(response);\n        } else {\n            let updatedTasks = [...tasks];\n            const index = updatedTasks.findIndex(e => e.id == id);\n            updatedTasks.splice(index, 1);\n            setTasks(updatedTasks);\n        }\n    }\n\n    const toggleCompletion = async (event) => {\n        const updatedTasks = [...tasks];\n        const id = event.target.value;\n        const index = updatedTasks.findIndex(task => task.id == event.target.value);\n\n        updatedTasks[index].complete = !updatedTasks[index].complete;\n        setTasks(updatedTasks);\n\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                complete: updatedTasks[index].complete\n            }),\n        };\n        const response = await fetch(`/api_v1/tasks/${id}/`, options);\n        \n        if (!response.ok) {\n            console.log(response);\n        } \n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e) {\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({text})\n        };\n\n        const response = await fetch(`/api_v1/tasks/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const data = await response.json();\n            setShow(false);\n            setText('');\n            setTasks([...tasks, data]);\n        }\n    }\n\n    const handleAdd = () => setShow(true)\n    const handleClose = () => setShow(false)\n\n    if(!tasks) {\n        return <div>spinner thingy</div>\n    }\n\n    const TaskListHTML = tasks.map(task =>\n        <TaskDetail \n            key={task.id} \n            task={task}\n            toggleCompletion={toggleCompletion} \n            handleDelete={handleDelete}\n            handleUpdate={handleUpdate}\n            />\n        )\n\n\n    return (\n        <>\n            <div className='task-container'>\n                <h4>Tasks</h4>\n                {TaskListHTML}\n                <button type=\"button\" className='add-task-btn' onClick={handleAdd}>Add task <FaPlusSquare/></button>\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Task:</Form.Label><Form.Control type='text' onChange={(e) => setText(e.target.value)} autoComplete='off' name='text' value={text}></Form.Control>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button type='button' variant='success' onClick={handleSubmit}>Add</Button>\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default withRouter(TaskList)","import {withRouter} from 'react-router-dom'\nimport DashCalendar from './DashCalendar'\nimport TaskList from './TaskList'\n\nfunction Dashboard() {\n\n    return(\n        <>\n        <main className='dashboard-main'>\n                <DashCalendar/>\n                <TaskList/>\n        </main>\n        </>\n    )\n}\n\nexport default withRouter(Dashboard)","import { NavLink, withRouter } from 'react-router-dom'\nimport { format } from 'date-fns'\n\n\nfunction DashboardHeader(props) {\n    const today = new Date();\n    const formattedDate = format(today, 'PPPP');\n    \n    return (\n        <>\n        <header className=\"dash-header bg-dark\">Welcome {props.username}!  Today is {formattedDate} </header>\n        <nav className='navbar navbar-expand-lg navbar-dark bg-dark' id='dash-header'>\n            <div className='container d-flex justify-content-center'>\n                <ul className='navbar-nav' id='dash-nav'>\n                    {props.isAdmin && (\n                        <>\n                            <li className='nav-item'>\n                                <NavLink to='/dashboard'>Dashboard</NavLink>\n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/clients'>Clients</NavLink>\n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/calendar'>Event Calendar</NavLink>\n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/workouts'>Workouts + Group Training</NavLink>\n                            </li>\n                        </>\n                    )}\n                    {!props.isAdmin && (\n                        <>\n                            <li className='nav-item'>\n                                <NavLink to='/calendar'>Event Calendar</NavLink> \n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/workouts'>Workouts + Group Training</NavLink>\n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/profile'>Manage Profile</NavLink>\n                            </li>\n                        </>\n                    )}\n                </ul>\n            </div>\n        </nav>\n        </>\n    )\n}\n\nexport default withRouter(DashboardHeader)","import { withRouter } from \"react-router\";\nimport { useState, useEffect } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Modal, Button, Form, ModalBody} from 'react-bootstrap'\nimport Cookies from 'js-cookie';\n\nconst defaultEvent = {\n    title:'',\n    start: null,\n    end: null,\n    allDay: false,\n    gymEvent: false,\n    details:'',\n}\n\nconst locales = {\n    'en-US': enUS\n};\n\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\n\nfunction CommunityCalendar(props) {\n    const [events, setEvents] = useState();\n    const [event, setEvent] = useState(defaultEvent);\n    const [show, setShow] = useState(false);\n\n    // const history = useHistory()\n    \n    const handleChange = (event) => {\n       \n        if(event.target.type === \"checkbox\") {\n            setEvent((prevState) => ({\n                ...prevState,\n                [event.target.name]: event.target.checked,\n            }));\n            return;\n        }\n       \n        const { name, value } = event.target;\n        setEvent((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n    useEffect(() => {\n        async function getEvents() {\n            const response = await fetch(`/api_v1/events/?type=community`);\n            if(!response.ok) {\n                console.log(response)\n            } else {\n                const data = await response.json();\n                const formatedEvents = data.map(event => ({...event, start: new Date(event.start), end: new Date(event.end)}));\n                setEvents(formatedEvents);\n            }\n        }\n        getEvents();\n    }, []);\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e){\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.start = new Date(data.start);\n            data.end = new Date(data.end);\n            setShow(false);\n            setEvent(defaultEvent);\n            setEvents([...events, data]);\n        }\n    }\n\n    async function handleUpdate() {\n        \n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/${event.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            setShow(false);\n            const updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents[index] = event;\n            setEvents(updatedEvents);\n            setEvent(defaultEvent);\n        }\n    }\n\n    async function handleDelete() {\n        const response = await fetch(`/api_v1/events/${event.id}/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            \n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id == event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);  \n            setShow(false);\n        }         \n    }\n\n    async function handleCancel() {\n        const response = await fetch(`api_v1/events/${event.id}/cancellation/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n            },\n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id == event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);\n            setShow(false);\n        }\n    }\n\n    const handleClose = () => {\n        setShow(false);\n        setEvent(defaultEvent);\n    }    \n    const handleSelection = (event) => {\n        setShow(true);\n        setEvent((prevState) => ({\n            ...prevState,\n            start: event.start,\n            end: event.end,\n        }));     \n    }\n\n    const handleEventSelect = (event) => {\n        setEvent({\n            ...event, \n            title: event.title,\n            start: event.start,\n            end:event.end,\n            details: event.details,\n        });\n        setShow(true);\n    }\n\n    async function handleRegister() {\n        \n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/register/${event.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            setShow(false);\n            const data = await response.json()\n            const updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents[index] = data;\n            setEvents(updatedEvents);\n            // setEvent(defaultEvent);\n        }\n    }\n\n    if(!events) {\n        return <div>loading SPINNER</div>\n    }\n    return (\n        <>\n            <h2>Community Events Calendar</h2>\n            <div className=\"monthly-cal\">\n                <Calendar\n                    selectable={true}\n                    localizer={localizer}\n                    events={events}\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    min={new Date(0,0,0,5,0,0)}\n                    max={new Date(0,0,0,22,0,0)}\n                    defaultView={\"month\"}\n                    views={['month','week']}\n                    onSelectSlot={handleSelection}\n                    onSelectEvent={handleEventSelect}\n                    style={{ height: 700 }}\n                    />\n            </div>\n            \n            {props.isAdmin && (\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add Event</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group>\n                            <Form.Label>Title: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"title\" value={event.title} placeholder='Event Title'></Form.Control>\n                            <Form.Label>Start: </Form.Label><Form.Control name=\"start\" value={event.start}></Form.Control>\n                            <Form.Label>End: </Form.Label><Form.Control name=\"end\" value={event.end}></Form.Control>\n                            <Form.Label>Details: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"details\" value={event.details} autoComplete='off' placeholder='Event details...'></Form.Control>\n                            <Form.Check type='checkbox' label='All Day' name=\"allDay\" checked={event.allDay} onChange={handleChange}></Form.Check>\n                            <Form.Check type='checkbox' label='Community Event' name=\"gymEvent\" checked={event.gymEvent} onChange={handleChange}></Form.Check>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {event.id\n                        ? \n                        <>\n                            <Button type='button' variant='info' onClick={handleCancel}>Cancel Event</Button>\n                            <Button type='button' variant='warning' onClick={handleUpdate} >Update</Button>\n                            <Button type='button' variant='dark' onClick={handleDelete}>Delete</Button>\n                        </>\n                        :\n                            <Button type='button' variant='success' onClick={handleSubmit}>Save</Button>\n                        }\n\n                        <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            )}\n\n            {!props.isAdmin && (\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Event</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div>{event.title}</div>\n                        <div>{event.details}</div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button type='button' variant='success' onClick={handleRegister}>{event.is_registered ? 'Unregister' : 'Register'}</Button>\n                        <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n\n\n\n\n            )}\n\n\n        </>\n    )\n}\n\nexport default withRouter(CommunityCalendar)","import { withRouter, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { format } from 'date-fns';\nimport {Modal, Button} from 'react-bootstrap'\nimport Cookies from \"js-cookie\";\n\n\n\nfunction Sessions(props) {\n    const {filter} = useParams();\n    const [sessions, setSessions] = useState();\n    const [show, setShow] = useState(false);\n   \n    function handleError(error) {\n        console.warn(error);\n    }\n\n    useEffect (() => {\n        async function getSessions() {\n            const response = await fetch(`/api_v1/events/?type=session`);\n            if(!response.ok) {\n                throw new Error('Network response was not OK');\n            }\n\n            const sessions = {};\n            const data = await response.json();\n            console.log('data', data)\n\n            data.forEach(session => {\n                // session.start = new Date(session.start);\n                // session.end = new Date(session.end);\n                const date = new Date(session.start);\n                const key = date.toDateString();\n                sessions[key] = !sessions[key]\n                  ? [\n                      {\n                        ...session,\n                        start: session.start.toString(),\n                        end: session.end.toString(),\n                      },\n                    ]\n                  : [\n                      ...sessions[key],\n                      {\n                        ...session,\n                        start: session.start.toString(),\n                        end: session.end.toString(),\n                      },\n                    ];\n\n            });\n            setSessions(sessions);\n        }\n        getSessions();\n    }, []);\n\n    async function handleRegister(session) {\n\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(session),\n        };\n\n        const response = await fetch(`/api_v1/events/register/${session.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const data = await response.json(); // updated session event from the server (single object)\n            const key = new Date(data.start).toDateString(); // key inside sessions you need to target (sessions is an object on state)\n            const values = [...sessions[key]]; // all sessions (listed inside an array) for sessions[key]\n            const index = values.findIndex(e => e.id === data.id);\n            values[index] = data;\n            \n            const updatedSessions = {...sessions};\n            updatedSessions[key] = values;\n\n            setSessions(updatedSessions);\n        }\n\n    }\n\n    const handleClose = () => setShow(false);\n    const handleOpen = () => setShow(true);\n\n    if(!sessions) {\n        return <div>No Sessions</div>\n    }\n\n    \n    const days = Object.keys(sessions);\n    console.log(days);\n    const sessionsHTML = days.map(day => {\n            const details = sessions[day].map(session => (\n                <div className=\"session\">\n                    <div className='session-time'>\n                        <time>{format(new Date(session.start), 'p')} - </time>\n                        <time>{format(new Date(session.end), 'p')}</time>\n                    </div>\n                    {!props.isAdmin && <button type=\"button\" onClick={() => handleRegister(session)}>{session.is_registered ? 'Unregister' : 'Register'}</button>}\n                    \n                    {props.isAdmin && <button type=\"button\" className='add-attendee-btn' onClick={handleOpen}>Attendees</button>}\n\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Attendees</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {session.attendees.map(attendee => <div> {attendee.first_name}</div>)}\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                </div>\n            ));\n\n            return (\n                <>\n                <h5 className='session-day'>{day}:</h5>\n                {details}\n                </>\n            )\n        })\n    \n    \n    return(\n        <>\n        {sessionsHTML}\n        </>\n    )\n}\n\nexport default withRouter(Sessions)","import { withRouter } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport Sessions from './../Workout/Sessions';\nimport { FaRegEdit, FaTrash, FaRegPlusSquare } from 'react-icons/fa';\nimport { format } from 'date-fns';\nimport { is } from 'date-fns/locale';\nimport { BsSave } from \"react-icons/bs\";\n\n\n\nfunction WorkoutDetail(props) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editWorkout, setEditWorkout] = useState(props.workout);\n    // const {id, date, text} = props.workout;\n\n    const handleChange = (event) => {\n        // setEditWorkout(event.target.value);\n        const {name, value} = event.target;\n        setEditWorkout(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    const handleUpdate = (event) => {\n        props.handleUpdate(editWorkout);\n        setIsEditing(false);\n    }\n\n    return (\n        <div className='workout'>\n            {\n                isEditing\n                ? \n                <>\n                    <div>\n                        <label htmlFor=\"date\">Date</label>\n                        <input id=\"date\" type='date' name='date' value={editWorkout.date} min='2021-11-01' onChange={handleChange}></input>\n                        <textarea type='text' name='text' id=\"text\" className='workout-edit-box' rows={5} cols={20} value={editWorkout.text} onChange={handleChange}></textarea>\n                        <button type='button' className='save-workout-btn' onClick={handleUpdate}>Save <BsSave/></button>\n                    </div>\n                </>\n                :\n                <>\n                    \n                    <h5 className=\"workout-date\">{format(new Date(props.workout.date + 'T08:00:00'), 'PPPP')}</h5>\n                    <article>{props.workout.text}</article>\n                    {props.isAdmin && <button type='button' className='edit-workout-btn' onClick={() => setIsEditing(true)}><FaRegEdit/></button>}\n                </>\n        \n            }\n                {props.isAdmin && <button type='button' className='delete-workout-btn' value={editWorkout.id} onClick={props.handleDelete}><FaTrash/></button>}\n        </div>\n    )\n\n}\n\n\nfunction Workouts(props) {\n    const [workouts, setWorkouts] = useState([]);\n    const [show, setShow] = useState(false);\n    const [text, setText] = useState('');\n    const [date, setDate] = useState((new Date()).toISOString().substr(0,10));\n\n    useEffect(() => {\n        async function getWorkouts() {\n            const response = await fetch(`/api_v1/workouts/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                setWorkouts(data);\n            }\n        }\n        getWorkouts();\n    }, []);\n\n    const handleUpdate = async (workout) => {\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n                'Content-Type' : 'application/json',\n            },\n            body: JSON.stringify(workout)\n        };\n\n        const response = await fetch(`/api_v1/workouts/${workout.id}/`, options);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const updatedWorkouts = [...workouts];\n            const index = updatedWorkouts.findIndex(e => e.id === workout.id);\n            updatedWorkouts[index] = workout;\n            setWorkouts(updatedWorkouts);\n        }\n    }\n\n    const handleDelete = async (event) => {\n        const id = event.currentTarget.value;\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(`/api_v1/workouts/${id}/`, options);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            let updatedWorkouts = [...workouts];\n            const index = updatedWorkouts.findIndex(e => e.id == id);\n            updatedWorkouts.splice(index, 1);\n            setWorkouts(updatedWorkouts);\n        }\n    }\n\n    function handleError(error) {\n        console.warn(error)\n    }\n\n    async function handleSubmit() {\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),           \n            },\n            body: JSON.stringify({\n                date,\n                text,\n            })\n        };\n\n        const response = await fetch(`/api_v1/workouts/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const data = await response.json();\n            setShow(false);\n            setText('');\n            setWorkouts([...workouts, data]);\n        }\n    }\n\n    const handleAdd = () => setShow(true)\n    const handleClose = () => setShow(false)\n\n    if(!workouts) {\n        return <div>spinner thingy</div>\n    }\n\n    const WorkoutListHTML = workouts.map(workout =>\n       <WorkoutDetail\n            key={workout.id}\n            workout={workout}\n            handleDelete={handleDelete}\n            handleUpdate={handleUpdate}\n            isAdmin={props.isAdmin}\n        />\n    )\n    \n    return(\n        <>  \n            <div className='workout-container'>\n                \n                <section className='workout-list'>\n                    <div className='workout-header'>\n                    <h3>Adult Performance Workouts</h3>\n                    {props.isAdmin && (\n                        <button type='button' className='add-workout-btn' onClick={handleAdd}>Add <FaRegPlusSquare/></button>\n                    )}\n                    </div>\n                    {WorkoutListHTML}\n                </section>\n                \n                <section className='class-list'>\n                    <h3>Adult Performance Group Training</h3>\n                    <Sessions isAuth={props.isAuth} isAdmin={props.isAdmin}/>\n                </section>\n            </div>\n \n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add New Workout</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group>\n                            <Form.Label>Date:</Form.Label>\n                            <Form.Control type='date' name='workout-date' value={date} min={date} onChange={(e) => setDate(e.target.value)}></Form.Control>\n                            <Form.Label>Workout:</Form.Label>\n                            <Form.Control type='text' as='textarea' onChange={(e) => setText(e.target.value)} name='text' value={text}>\n                            </Form.Control>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button type='button' variant='success' onClick={handleSubmit}>Add</Button>\n                        <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                    </Modal.Footer>\n                </Modal>    \n        </>\n    )\n}\n\nexport default withRouter(Workouts);","import { withRouter, useParams, NavLink } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { Card, CardActionArea, CardContent } from '@mui/material';\n// import { ModalBody } from 'react-bootstrap';\n// import Workout from '../Workout/Workout';\n// import { FaSearch } from \"react-icons/fa\"\n\n\nfunction ClientDetail(props) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [coachNote, setCoachNote] = useState(props.client.coach_notes); // an object or undefined\n\n    const handleChange = (event) => {\n        setCoachNote(event.target.value);\n    }   \n\n    const handleSave = async (event) => {\n\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n                'Content-Type' : 'application/json',\n            },\n            body: JSON.stringify({ coach_notes: coachNote }),\n        };\n\n        const response = await fetch(`/api_v1/accounts/profiles/${props.client.id}/`, options);\n        if (!response.ok) {\n            console.log(response)\n        } else {\n            const data = await response.json()\n            props.handleUpdate(props.client.id, data);\n            setCoachNote(coachNote);\n            setIsEditing(false);\n\n        }\n    }\n\n    \n    return (\n        <div className='client'>\n            {\n               \n                <>\n                    <div key={props.client.id} className='client-profile'>\n                        <Card className='clientprofiles d-flex-col p-2 mb-3'>\n                            <CardContent className='d-flex align-items-center'>\n                                <img className='client-photo rounded-circle' src={props.client.avatar} alt=''/>\n                                <p>{props.client.first_name} {props.client.last_name}</p>\n                            </CardContent>\n                            <CardContent className=\"d-flex-col\">\n                                <p>Primary phone: {props.client.phone_number}</p>\n                                <p>Primary email: {props.client.email}</p>\n                                <p>Client note: {props.client.member_notes}</p>\n                                <label>Coach note:</label><textarea type=\"text\" name=\"coach_notes\" value={coachNote} disabled={!isEditing} cols='30' onChange={handleChange}></textarea>\n                            \n                                <p>PT Coach: {props.client.coach_name}</p>\n                                <CardActionArea>\n                                    {isEditing \n                                    ?\n                                    <button type='button' className='edit-note-btn' onClick={handleSave}>Save</button>\n                                    :\n                                    <button type='button' className='edit-note-btn' onClick={() => setIsEditing(true)}>Edit</button>\n                                    }\n                                </CardActionArea>\n                            </CardContent>\n                        </Card>\n                        \n                    </div>\n\n                </>\n\n            }\n        </div>\n    )\n}\n\n\nfunction Clients(props) {\n    // const {filter} = useParams();\n    // console.log(props.computedMatch.params.filter)\n    const [clients, setClients] = useState([]);\n    const [searchClients, setSearchClients] = useState('');\n    const [filteredResults, setFilteredResults] = useState();\n\n    useEffect (() => {\n        async function getClients() {\n            let url = `/api_v1/accounts/profiles/`\n           \n            const response = await fetch(url);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                setClients(data);\n            }\n        }\n        getClients();\n    }, []);\n\n    const handleUpdate = async (clientID, coachNote) => {\n        console.log(clientID, coachNote);\n\n\n        // const options = {\n        //     method: 'PUT',\n        //     headers: {\n        //         'X-CSRFToken' : Cookies.get('csrftoken'),\n        //         'Content-Type' : 'application/json',\n        //     },\n        //     body: JSON.stringify(client)\n        // };\n\n        // const response = await fetch(`/api_v1/accounts/profiles/${client.id}/`, options);\n        // if(!response.ok) {\n        //     console.log(response)\n        // } else {\n        //     const updatedClients = [...clients];\n        //     const index = updatedClients.findIndex(e => e.id === client.id);\n        //     updatedClients[index] = client;\n        //     setClients(updatedClients);\n        // }\n    }\n    // console.log({filteredResults});\n\n    const clientList = searchClients ? filteredResults : clients;\n    const ClientHTML = clientList\n    .filter(client => props.computedMatch.params.filter === 'pt' ? client.is_client : client)\n    .map(client => \n        <div className='client-detail-column'>\n        <ClientDetail\n            key={client.id}\n            client={client}\n            handleUpdate={handleUpdate}\n        />\n        </div>\n        )\n\n    \n    useEffect (() => {\n        if (searchClients !== '') {\n            const filteredData = clients.filter((client) => {\n                const checkValues = {\n                    first_name: client.first_name,\n                    last_name: client.last_name,\n                    email: client.email\n                }\n                return Object.values(checkValues).join('').toLowerCase().includes(searchClients.toLowerCase())\n            });\n            setFilteredResults(filteredData)\n        } else {\n            setFilteredResults(clients)\n        }\n    }, [,searchClients]);\n\n    const searchItems = (event) => {\n        setSearchClients(event.target.value);\n    }\n\n        \n    \n    return (\n        <div className='client-container'>\n            <nav className='client-nav'>\n                <NavLink to='/clients/'>All Members</NavLink>\n                <NavLink to='/clients/pt/'>Personal Training Clients</NavLink>\n                <input className='client-search' type='text' name='search' id='search' autoComplete='off' placeholder='Search Here...' onChange={searchItems}></input>\n            </nav>\n\n                <section className='client-list'>\n                    {ClientHTML}\n                </section>\n        \n        </div>\n    )\n}\n\nexport default Clients","import { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction ProfileForm(props) {\n    const [profile, setProfile] = useState();\n    const[preview, setPreview] = useState('');\n\n    useEffect(() => {\n        async function getProfile() {\n            const response = await fetch(`/api_v1/accounts/profiles/current_user/`);\n            if(!response.ok) {\n                // console.log(response);\n                setProfile({\n                    first_name: '',\n                    last_name: '',\n                    phone_number: '',\n                    member_notes: '',\n                    avatar: null,\n                });\n            } else {\n                const data = await response.json();\n                console.log('data', data)\n                setProfile({...data});\n            }\n           \n        }\n        getProfile();\n    }, [])\n\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        setProfile({...profile, [name]: value})\n    }\n\n    const handleImage = (event) => {\n        const file = event.target.files[0];\n        setProfile({\n            ...profile,\n            avatar: file,\n        });\n\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setPreview(reader.result);\n        }\n        reader.readAsDataURL(file);\n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSave(event){\n       \n        const formData = new FormData();\n        formData.append('first_name', profile.first_name);\n        formData.append('last_name', profile.last_name);\n        formData.append('phone_number', profile.phone_number)\n        formData.append('member_notes', profile.member_notes)\n        if(profile.avatar instanceof File) {\n            formData.append('avatar', profile.avatar);\n        }\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n            },\n            body: formData,\n        };\n\n        const response = await fetch(`/api_v1/accounts/profiles/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            props.history.push('/workouts');\n        }\n    }\n\n    async function handleUpdate(event){\n       \n        const formData = new FormData();\n        if(profile.avatar instanceof File) {\n            formData.append('avatar', profile.avatar);\n        }\n\n        formData.append('first_name', profile.first_name);\n        formData.append('last_name', profile.last_name);\n        formData.append('phone_number', profile.phone_number);\n        formData.append('member_notes', profile.member_notes);\n\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: formData,\n        };\n\n        const response = await fetch(`/api_v1/accounts/profiles/${profile.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n        }\n    }\n\n\n    if(!profile) {\n        return <div>SPINNER THINGY</div>\n    }\n\n    return (\n        <div className='profile-form-container'>\n            <form className='col-4 offset-lg-4 profile-form'>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='first_name'>First Name: </label>\n                    <input \n                        type='text' \n                        name='first_name'\n                        id='first_name'\n                        placeholder='First Name'\n                        required\n                        value={profile.first_name} \n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='last_name'>Last Name: </label>\n                    <input \n                        type='text' \n                        name='last_name'\n                        id='last_name'\n                        placeholder='Last Name' \n                        required\n                        value={profile.last_name} \n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='phone_number'>Primary Phone: </label>\n                    <input \n                        type='tel' \n                        name='phone_number'\n                        id='phone_number'\n                        placeholder='+15558675309'\n                        required\n                        value={profile.phone_number} \n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='form-group text-left mb-3'>\n                    <label htmlFor='notes'>Notes: </label>\n                    <textarea \n                        name='member_notes'\n                        id='member_notes'\n                        cols=\"40\"\n                        rows=\"5\"\n                        placeholder='Notes...'\n                        value={profile.member_notes} \n                        onChange={handleChange}\n                    ></textarea>\n                </div>\n                <div className='form-group text-left mb-3'>\n                    <input \n                        type='file' \n                        name='avatar' \n                        onChange={handleImage}/>\n                    {profile.avatar && <img src={preview} alt=''/>}\n                </div>\n                \n                {!profile.id\n                ?\n                    <button type='button' className='btn btn-dark mt-3' id='profile-button' onClick={handleSave}>Save Profile</button>\n                :\n                    <button type='button' className='btn btn-dark mt-3' id='profile-button' onClick={handleUpdate}>Update Profile</button>\n                }\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(ProfileForm)\n","import {useEffect, useState} from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport PrivateRoute from './../PrivateRoute/PrivateRoute';\nimport RegistrationForm from './../Registration/RegistrationForm';\nimport LoginForm from './../Login/LoginForm';\nimport MainHeader from './../Header/MainHeader';\nimport LandingPage from './../Landing/LandingPage';\nimport Dashboard from './../Dashboard/Dashboard';\nimport DashboardHeader from './../Header/DashboardHeader';\nimport CommunityCalendar from './../Calendar/CommunityCalendar';\nimport Workout from './../Workout/Workout';\nimport Clients from './../Clients/Clients';\nimport ProfileForm from './../Profile/ProfileForm';\nimport Cookies from 'js-cookie';\n\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/');\n      if(!response.ok) {\n        setUser({isAuth: false});\n      } else {\n        const data = await response.json();\n        setUser({...data, isAuth: true, isAdmin: data.is_staff})\n      }\n    }\n    checkAuth();\n  }, [history]);\n\n  async function handleLogout(event, props) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n    const response = await fetch('/rest-auth/logout/', options);\n    if (!response.ok) {\n      console.log(response);\n    } else {\n      const data = await response.json();\n      Cookies.remove('Authorization');\n      setUser({isAuth:false});\n      history.push('/');\n    }\n  }\n\n \n\n  if(!user) {\n    return <Spinner animation='border'/>\n  }\n\n  const isAuth = user?.isAuth;\n  const isAdmin = user?.isAdmin;\n  const username = user?.username;\n  \n\n  return (\n    <>\n      <MainHeader isAuth={isAuth} isAdmin={isAdmin} handleLogout={handleLogout}/>\n      {isAuth && <DashboardHeader username={username} isAdmin={isAdmin}/> }\n      <Switch>\n        <Route\n          path=\"/registration\"\n          render={(props) => (\n            <RegistrationForm \n              {...props} \n              isAuth={isAuth} \n              setUser={setUser} \n            />\n          )}\n        />\n        <Route\n          path=\"/login\"\n          render={(props) => (\n            <LoginForm \n              {...props} \n              isAuth={isAuth} \n              setUser={setUser} \n            />\n          )}\n        />\n        <PrivateRoute \n          path=\"/profile\" \n          isAuth={isAuth} \n          component={ProfileForm} \n        />\n        <PrivateRoute\n          path=\"/dashboard\"\n          isAuth={isAuth}\n          isAdmin={isAdmin}\n          component={Dashboard}\n        />\n        <PrivateRoute\n          path=\"/clients/:filter?\"\n          isAuth={isAuth}\n          isAdmin={isAdmin}\n          component={Clients}\n        />\n        <PrivateRoute\n          path=\"/calendar\"\n          isAuth={isAuth}\n          isAdmin={isAdmin}\n          component={CommunityCalendar}\n        />\n        <PrivateRoute\n          path=\"/workouts\"\n          isAuth={isAuth}\n          isAdmin={isAdmin}\n          component={Workout}\n        />\n        <Route \n          path=\"/\" \n          exact\n          isAuth={isAuth} \n          isAdmin={isAdmin} \n          component={LandingPage}\n        />\n      </Switch>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}