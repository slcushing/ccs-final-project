{"version":3,"sources":["components/PrivateRoute/PrivateRoute.js","components/Registration/RegistrationForm.js","components/Login/LoginForm.js","components/Header/MainHeader.js","components/Landing/LandingPage.js","components/Dashboard/DashCalendar.js","components/Dashboard/TaskList.js","components/Dashboard/Dashboard.js","components/Header/DashboardHeader.js","components/Calendar/CommunityCalendar.js","components/Workout/Sessions.js","components/Workout/Workout.js","components/Clients/Clients.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","isAuth","props","to","withRouter","useState","username","email","password1","password2","user","setUser","setError","handleInput","event","target","name","value","prevState","handleError","error","console","warn","a","preventDefault","log","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","ok","json","data","set","key","history","push","className","onSubmit","htmlFor","type","id","placeholder","required","onChange","password","isAdmin","is_staff","Header","src","alt","onClick","handleLogout","defaultEvent","title","start","end","allDay","gymEvent","details","locales","enUS","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","show","setShow","events","setEvents","setEvent","handleChange","checked","e","Date","updatedEvents","index","findIndex","splice","useEffect","formatedEvents","map","getEvents","handleClose","selectable","startAccessor","endAccessor","min","max","defaultView","views","onSelectSlot","onSelectEvent","style","height","Modal","onHide","closeButton","Title","Body","Form","Group","Label","Control","plaintext","readOnly","Check","label","Footer","Button","variant","TaskDetail","isEditing","setIsEditing","task","text","editText","setEditText","complete","toggleCompletion","updatedTask","handleUpdate","handleDelete","tasks","setTasks","setText","getTasks","updatedTasks","currentTarget","TaskListHTML","today","formattedDate","useParams","filter","sessions","setSessions","Error","getSessions","sessionsHTML","WorkoutDetail","workout","editWorkout","setEditWorkout","date","as","rows","workouts","setWorkouts","toISOString","substr","setDate","getWorkouts","updatedWorkouts","WorkoutListHTML","clients","setClients","getClients","ClientHTML","client","is_client","avatar","first_name","last_name","phone_number","coach_name","useHistory","remove","checkAuth","MainHeader","path","Workout","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b72ba8c.chunk.js","sourcesContent":["import {Route, Redirect} from 'react-router-dom'\n\nfunction PrivateRoute({isAuth, ...props}) {\n    return isAuth ? <Route {...props}/> : <Redirect to='/login'/>\n}\n\nexport default PrivateRoute","import {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction RegistrationForm(props) {\n    const [user,setUser] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2:'',\n    });\n\n    const [error, setError] = useState(null)\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    function handleError(error) {\n        console.warn(error)\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        console.log('user', user)\n        if(user.password1 !== user.password2) {\n            setError('Passwords do not match!')\n        } else {\n            const options = {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n                body: JSON.stringify(user)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setUser((prevState) => ({\n                    ...prevState, isAuth: true,\n                }));\n                props.history.push('/');\n            }\n        }\n    }\n\n    // if(props.isAuth) {\n    //     return <Redirect to='/' />\n    // }\n\n    return (\n        <form className='mt-3 col-4 offset-lg-4 register-form' onSubmit={handleSubmit}>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='username'>Username</label>\n                <input\n                    type='text'\n                    className='form-control'\n                    id='username'\n                    placeholder='Enter Username'\n                    required\n                    name='username'\n                    value={user.username}\n                    onChange={handleInput}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='email'>Email</label>\n                <input\n                    type='email'\n                    className='form-control'\n                    id='email'\n                    placeholder='Enter Email'\n                    required\n                    name='email'\n                    value={user.email}\n                    onChange={handleInput}\n                    />\n            </div><div className='form-group text-left mb-3'>\n                <label htmlFor='password1'>Password 1</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password1'\n                    placeholder='Enter Password'\n                    required\n                    name='password1'\n                    value={user.password1}\n                    onChange={handleInput}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password2'>Password 2</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password2'\n                    placeholder='Confirm Password'\n                    required\n                    name='password2'\n                    value={user.password2}\n                    onChange={handleInput}\n                    />\n            </div>\n            <button type='submit' className='btn btn-primary mt-3' id='register-button'>Register</button>\n        </form>\n    )\n}\n\nexport default withRouter(RegistrationForm)","import {useState} from 'react';\nimport {withRouter, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props) {\n    const [user, setUser] = useState({\n        username: '',\n        password: '',\n    });\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method:'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(user)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`);\n            props.setUser((prevState) => ({\n                ...prevState,\n                isAuth: true, \n                isAdmin: data.user.is_staff,\n                username: data.user.username,\n            }));\n            if(data.user.is_staff) {\n                props.history.push('/dashboard/');\n            } else {\n                props.history.push('/workouts/'); \n            }\n            \n        }\n    }\n\n    if(props.isAuth && props.isAdmin) {\n        return <Redirect to='/dashboard' />\n    }\n\n    if(props.isAuth) {\n        return <Redirect to='/workouts' />\n    }\n\n    return (\n        <form className='mt-3 col-4 offset-lg-4 login-form' onSubmit={handleSubmit}>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='username'>Username</label>\n                <input\n                    type='text'\n                    className='form-control'\n                    id='username'\n                    placeholder='Enter Username'\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={user.username}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password'>Password</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password'\n                    placeholder='Enter Password'\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={user.password}\n                    />\n            </div>\n            <button type='submit' className='btn btn-primary' id='login-button'>Login</button>\n        </form>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { NavLink } from 'react-router-dom';\n\nfunction Header(props) {\n    return(\n        <nav className='navbar navbar-expand-lg navbar-dark bg-dark' id='header-nav'>\n            <div className='container'>\n                <img className='navbar-brand' src='images/kpf_logo.jpeg' alt='logo'/>\n                <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarResponsive' aria-controls='navbarResponsive' aria-expanded='false' aria-label='Toggle navigation'>\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse' id='navbar-responsive'>\n                    <ul className='navbar-nav ml-auto' className='container d-flex justify-content-end' id='main-nav'>\n                        {props.isAuth && (\n                            <li className='nav-item' id='dashboard-btn'>\n                                <NavLink to='/dashboard'>Dashboard</NavLink>\n                            </li>\n                        )}\n                        {props.isAuth && (\n                            <button type='submit' className='logout' onClick={() => props.handleLogout()}>Logout</button>\n                        )}\n                    </ul>\n                </div>\n            </div> \n\n        </nav>\n    )\n}\n\nexport default Header","import { NavLink, withRouter } from 'react-router-dom';\n\nfunction LandingPage() {\n    return (\n        <>\n        <div className='landing-body'>\n            <section>#alwaysimproving</section>\n            <aside>\n                <h4>New to the Factory?</h4>\n                <div className='landing-atag'>\n                    <NavLink to='/registration'>Register Here</NavLink>\n                </div>\n                <h4>Back for more? Welcome back.</h4>\n                <div className='landing-atag'>\n                    <NavLink to='/login'>Login Here</NavLink>\n                </div>\n            </aside>\n        </div>\n        </>\n    )\n}\n\nexport default withRouter(LandingPage)","import {useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Modal, Button, Form} from 'react-bootstrap'\nimport Cookies from 'js-cookie';\n\n\n\nconst defaultEvent = {\n    title:'',\n    start: null,\n    end: null,\n    allDay: false,\n    gymEvent: false,\n    details:'',\n}\n\nconst locales = {\n    'en-US': enUS\n};\n\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\n\nfunction DashCalendar() {\n    const [show, setShow] = useState(false);\n    const [events, setEvents] = useState();\n    const [event, setEvent] = useState(defaultEvent);\n\n    // const history = useHistory()\n    \n    const handleChange = (event) => {\n       \n        if(event.target.type === \"checkbox\") {\n            setEvent((prevState) => ({\n                ...prevState,\n                [event.target.name]: event.target.checked,\n            }));\n            return;\n        }\n       \n        const { name, value } = event.target;\n        setEvent((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    useEffect(() => {\n        async function getEvents() {\n            const response = await fetch(`/api_v1/events/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                const formatedEvents = data.map(event => ({...event, start: new Date(event.start), end: new Date(event.end)}));\n                setEvents(formatedEvents);\n                console.log(formatedEvents)\n            }\n        }\n        getEvents();\n    },[]);\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e){\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/?type=coach`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.start = new Date(data.start);\n            data.end = new Date(data.end);\n            setShow(false);\n            setEvent(defaultEvent);\n            setEvents([...events, data]);\n        }\n    }\n\n    async function handleUpdate() {\n        \n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/${event.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            setShow(false);\n            const updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents[index] = event;\n            setEvents(updatedEvents);\n            setEvent(defaultEvent);\n        }\n    }\n\n    async function handleDelete() {\n        const response = await fetch(`/api_v1/events/${event.id}/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);  \n            setShow(false);\n        }\n    }\n\n    async function handleCancel() {\n        const response = await fetch(`api_v1/events/${event.id}/cancellation/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n            },\n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id == event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);\n            setShow(false);\n        }\n    }\n\n    const handleClose = () => {\n        setShow(false);\n        setEvent(defaultEvent);\n    }\n    const handleSelection = (event) => {\n        setShow(true);\n        setEvent((prevState) => ({\n            ...prevState,\n            start: event.start,\n            end: event.end,\n        }));\n        \n    }\n\n    const handleEventSelect = (event) => {\n        setEvent({\n            ...event, \n            title: event.title,\n            start: event.start,\n            end:event.end,\n            details: event.details,\n        });\n        setShow(true);\n    }\n    \n    if(!events) {\n        return <div>loading</div>\n    }\n    return (\n        <>\n            <div className=\"daily-cal\">\n                <Calendar\n                    selectable={true}\n                    localizer={localizer}\n                    events={events}\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    min={new Date(0,0,0,5,0,0)}\n                    max={new Date(0,0,0,22,0,0)}\n                    defaultView={\"week\"}\n                    views={['week', 'day']}\n                    onSelectSlot={handleSelection}\n                    onSelectEvent={handleEventSelect}\n                    style={{ height: 900 }}\n                    />\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Title: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"title\" value={event.title} placeholder='Event Title'></Form.Control>\n                        <Form.Label>Start: </Form.Label><Form.Control plaintext readOnly name=\"start\" value={event.start}></Form.Control>\n                        <Form.Label>End: </Form.Label><Form.Control plaintext readOnly name=\"end\" value={event.end}></Form.Control>\n                        <Form.Label>Details: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"details\" value={event.details} placeholder='Event details...'></Form.Control>\n                        <Form.Check type='checkbox' label='All Day' name=\"allDay\" checked={event.allDay} onChange={handleChange}></Form.Check>\n                        <Form.Check type='checkbox' label='Community Event' name=\"gymEvent\" checked={event.gymEvent} onChange={handleChange}></Form.Check>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    {event.id\n                    ? \n                    <>\n                        <Button type='button' variant='info' onClick={handleCancel}>Cancel Event</Button>\n                        <Button type='button' variant='warning' onClick={handleUpdate} >Update</Button>\n                        <Button type='button' variant='dark' onClick={handleDelete}>Delete</Button>\n                    </>\n                    :\n                        <Button type='button' variant='success' onClick={handleSubmit}>Save</Button>\n                    }\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default withRouter(DashCalendar)","import { withRouter } from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport Cookies from 'js-cookie';\nimport {Modal, Button, Form} from 'react-bootstrap'\nimport { FaRegEdit, FaTrash, FaRegPlusSquare } from 'react-icons/fa'\n\nfunction TaskDetail(props) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editText, setEditText] = useState(props.task.text);\n    const {id, text, complete} = props.task;\n\n    const handleChange = (event) => {\n        setEditText(event.target.value);\n    }\n\n    const handleUpdate = (event) => {\n        const updatedTask = {...props.task, text: editText}\n        props.handleUpdate(updatedTask);\n        setIsEditing(false);\n    }\n\n    return (\n        <div className='task-item'>\n            <input type='checkbox' checked={complete} name=\"complete\" onChange={props.toggleCompletion} value={id} />\n            {\n                isEditing ?\n                <input type=\"text\" name=\"editText\" value={editText} onChange={handleChange} /> :\n                <label>{text}</label>\n            }\n           \n            {\n                isEditing ? \n                <button type='button' className='save-task-btn' onClick={handleUpdate}>save</button> :\n                <button type='button' className='edit-task-btn' onClick={() => setIsEditing(true)}><FaRegEdit/></button>\n            }\n            <button type='button' className='delete-task-btn' onClick={props.handleDelete} value={id}><FaTrash/></button>\n        </div>\n    )\n}\n\n\nfunction TaskList(props) {\n    const [tasks, setTasks] = useState([]);\n    const [show, setShow] = useState(false);\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        async function getTasks() {\n            const response = await fetch(`/api_v1/tasks/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                \n                setTasks(data);\n            }\n        }\n        getTasks();\n    }, []);\n\n    const handleUpdate = async (task) => {\n        // console.log('are you updated', task);\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(task)\n        };\n\n        const response = await fetch(`/api_v1/tasks/${task.id}/`, options);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const updatedTasks = [...tasks];\n            const index = updatedTasks.findIndex(e => e.id === task.id);\n            updatedTasks[index] = task;\n            setTasks(updatedTasks);\n\n        }\n    }\n\n    const handleDelete = async (event) => {\n        const id = event.currentTarget.value;\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(`/api_v1/tasks/${id}/`, options);\n        if (!response.ok) {\n            console.log(response);\n        } else {\n            let updatedTasks = [...tasks];\n            const index = updatedTasks.findIndex(e => e.id === id);\n            updatedTasks.splice(index, 1);\n            setTasks(updatedTasks);\n        }\n    }\n\n    const toggleCompletion = async (event) => {\n        const updatedTasks = [...tasks];\n        const id = event.target.value;\n        const index = updatedTasks.findIndex(task => task.id == event.target.value);\n\n        updatedTasks[index].complete = !updatedTasks[index].complete;\n        setTasks(updatedTasks);\n\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                complete: updatedTasks[index].complete\n            }),\n        };\n        const response = await fetch(`/api_v1/tasks/${id}/`, options);\n        \n        if (!response.ok) {\n            console.log(response);\n        } \n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e) {\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({text})\n        };\n\n        const response = await fetch(`/api_v1/tasks/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const data = await response.json();\n            setShow(false);\n            setText('');\n            setTasks([...tasks, data]);\n        }\n    }\n\n    const handleAdd = () => setShow(true)\n    const handleClose = () => setShow(false)\n\n    if(!tasks) {\n        return <div>spinner thingy</div>\n    }\n\n    const TaskListHTML = tasks.map(task =>\n        <TaskDetail \n            key={task.id} \n            task={task}\n            toggleCompletion={toggleCompletion} \n            handleDelete={handleDelete}\n            handleUpdate={handleUpdate}\n            />\n        )\n\n\n    return (\n        <>\n            <div className='task-container'>\n                <h4>Tasks</h4>\n                {TaskListHTML}\n                <button type=\"button\" className='add-task-btn' onClick={handleAdd}>Add task <FaRegPlusSquare/></button>\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Task:</Form.Label><Form.Control type='text' onChange={(e) => setText(e.target.value)} name='text' value={text}></Form.Control>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button type='button' variant='success' onClick={handleSubmit}>Add</Button>\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default withRouter(TaskList)","import {withRouter} from 'react-router-dom'\nimport DashCalendar from './DashCalendar'\nimport TaskList from './TaskList'\n\nfunction Dashboard() {\n\n    return(\n        <>\n        <main className='dashboard-main'>\n                <DashCalendar/>\n                <TaskList/>\n        </main>\n        </>\n    )\n}\n\nexport default withRouter(Dashboard)","import { NavLink, withRouter } from 'react-router-dom'\nimport { format } from 'date-fns'\n\n\nfunction DashboardHeader(props) {\n    const today = new Date();\n    const formattedDate = format(today, 'PPPP');\n    \n    return (\n        <>\n        <header className=\"dash-header\">Welcome {props.username}!  Today is {formattedDate} </header>\n        <nav className='navbar navbar-expand-lg navbar-dark bg-dark' id='dash-header'>\n            <div className='container d-flex justify-content-center'>\n                <ul className='navbar-nav' id='dash-nav'>\n                    {props.isAdmin && (\n                        <>\n                            <li className='nav-item'>\n                                <NavLink to='/dashboard'>Dashboard</NavLink>\n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/clients'>Clients</NavLink>\n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/calendar'>Event Calendar</NavLink>\n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/workouts'>Workouts + Group Training</NavLink>\n                            </li>\n                        </>\n                    )}\n                    {!props.isAdmin && (\n                        <>\n                            <li className='nav-item'>\n                                    <NavLink to='/calendar'>Event Calendar</NavLink> \n                            </li>\n                            <li className='nav-item'>\n                                <NavLink to='/workouts'>Workouts + Group Training</NavLink>\n                            </li>\n                        </>\n                    )}\n                </ul>\n            </div>\n        </nav>\n        </>\n    )\n}\n\nexport default withRouter(DashboardHeader)","import { withRouter } from \"react-router\";\nimport { useState, useEffect } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Modal, Button, Form} from 'react-bootstrap'\nimport Cookies from 'js-cookie';\n\nconst defaultEvent = {\n    title:'',\n    start: null,\n    end: null,\n    allDay: false,\n    gymEvent: false,\n    details:'',\n}\n\nconst locales = {\n    'en-US': enUS\n};\n\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\n\nfunction CommunityCalendar() {\n    const [events, setEvents] = useState();\n    const [event, setEvent] = useState(defaultEvent);\n    const [show, setShow] = useState(false);\n\n    // const history = useHistory()\n    \n    const handleChange = (event) => {\n       \n        if(event.target.type === \"checkbox\") {\n            setEvent((prevState) => ({\n                ...prevState,\n                [event.target.name]: event.target.checked,\n            }));\n            return;\n        }\n       \n        const { name, value } = event.target;\n        setEvent((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n    useEffect(() => {\n        async function getEvents() {\n            const response = await fetch(`/api_v1/events/?type=community`);\n            if(!response.ok) {\n                console.log(response)\n            } else {\n                const data = await response.json();\n                const formatedEvents = data.map(event => ({...event, start: new Date(event.start), end: new Date(event.end)}));\n                setEvents(formatedEvents);\n            }\n        }\n        getEvents();\n    }, []);\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e){\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.start = new Date(data.start);\n            data.end = new Date(data.end);\n            setShow(false);\n            setEvent(defaultEvent);\n            setEvents([...events, data]);\n        }\n    }\n\n    async function handleUpdate() {\n        \n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/${event.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            setShow(false);\n            const updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents[index] = event;\n            setEvents(updatedEvents);\n            setEvent(defaultEvent);\n        }\n    }\n\n    async function handleDelete() {\n        const response = await fetch(`/api_v1/events/${event.id}/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            \n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id == event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);  \n            setShow(false);\n        }         \n    }\n\n    async function handleCancel() {\n        const response = await fetch(`api_v1/events/${event.id}/cancellation/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n            },\n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id == event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);\n            setShow(false);\n        }\n    }\n\n    const handleClose = () => {\n        setShow(false);\n        setEvent(defaultEvent);\n    }    \n    const handleSelection = (event) => {\n        setShow(true);\n        setEvent((prevState) => ({\n            ...prevState,\n            start: event.start,\n            end: event.end,\n        }));     \n    }\n\n    const handleEventSelect = (event) => {\n        setEvent({\n            ...event, \n            title: event.title,\n            start: event.start,\n            end:event.end,\n            details: event.details,\n        });\n        setShow(true);\n    }\n\n    if(!events) {\n        return <div>loading</div>\n    }\n    return (\n        <>\n            <h2>Community Events Calendar</h2>\n            <div className=\"monthly-cal\">\n                <Calendar\n                    selectable={true}\n                    localizer={localizer}\n                    events={events}\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    min={new Date(0,0,0,5,0,0)}\n                    max={new Date(0,0,0,22,0,0)}\n                    defaultView={\"month\"}\n                    views={['month','week']}\n                    onSelectSlot={handleSelection}\n                    onSelectEvent={handleEventSelect}\n                    style={{ height: 700 }}\n                    />\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Title: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"title\" value={event.title} placeholder='Event Title'></Form.Control>\n                        <Form.Label>Start: </Form.Label><Form.Control name=\"start\" value={event.start}></Form.Control>\n                        <Form.Label>End: </Form.Label><Form.Control name=\"end\" value={event.end}></Form.Control>\n                        <Form.Label>Details: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"details\" value={event.details} placeholder='Event details...'></Form.Control>\n                        <Form.Check type='checkbox' label='All Day' name=\"allDay\" checked={event.allDay} onChange={handleChange}></Form.Check>\n                        <Form.Check type='checkbox' label='Community Event' name=\"gymEvent\" checked={event.gymEvent} onChange={handleChange}></Form.Check>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    {event.id\n                    ? \n                    <>\n                        <Button type='button' variant='info' onClick={handleCancel}>Cancel Event</Button>\n                        <Button type='button' variant='warning' onClick={handleUpdate} >Update</Button>\n                        <Button type='button' variant='dark' onClick={handleDelete}>Delete</Button>\n                    </>\n                    :\n                        <Button type='button' variant='success' onClick={handleSubmit}>Save</Button>\n                    }\n\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n\n        </>\n    )\n}\n\nexport default withRouter(CommunityCalendar)","import { withRouter, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { format } from 'date-fns';\n\n\n\nfunction Sessions(props) {\n    const {filter} = useParams();\n    const [sessions, setSessions] = useState([]);\n    \n    useEffect (() => {\n        async function getSessions() {\n            const response = await fetch(`/api_v1/events/?type=session`);\n            if(!response.ok) {\n                throw new Error('Network response was not OK');\n            } else {\n                const data = await response.json()\n                setSessions(data);\n            }\n        }\n        getSessions();\n    }, []);\n\n    const sessionsHTML = sessions.map(event =>\n            <div key={event.id} className = 'session-info'>\n                <p className='d-block'>Adult Performance Group Training\n                <time className=\"d-block\">start: {format(new Date(event.start), 'MM/dd/yyyy hh:mm a')}</time>\n                <time className=\"d-block\">end: {format(new Date(event.end), 'MM/dd/yyyy hh:mm a')}</time>\n                </p>\n            </div>\n    );\n    \n    \n    return(\n        <>\n        {sessionsHTML}\n        </>\n    )\n}\n\nexport default withRouter(Sessions)","import { withRouter } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport Sessions from './../Workout/Sessions'\nimport { FaRegEdit, FaTrash, FaRegPlusSquare } from 'react-icons/fa'\n\n\n\nfunction WorkoutDetail(props) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editWorkout, setEditWorkout] = useState(props.workout);\n    // const {id, date, text} = props.workout;\n\n    const handleChange = (event) => {\n        // setEditWorkout(event.target.value);\n        const {name, value} = event.target;\n        setEditWorkout(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    const handleUpdate = (event) => {\n        props.handleUpdate(editWorkout);\n        setIsEditing(false);\n    }\n\n    return (\n        <div className='workout'>\n            {\n                isEditing \n                ? \n                <>\n                    <label htmlFor=\"date\">Date</label>\n                    <input id=\"date\" type='date' name='date' value={editWorkout.date} min='2021-11-01' onChange={handleChange}></input>\n                    <label htmlFor=\"text\">Text</label> \n                    <input id=\"text\" type='text' as='textarea' rows={10} name='text' value={editWorkout.text} onChange={handleChange}/>\n                    <button type='button' className='save-workout-btn' onClick={handleUpdate}>save</button> \n                </>\n                :\n                <>\n                    \n                    <h5>{props.workout.date}</h5>\n                    <article>{props.workout.text}</article>\n                    <button type='button' className='edit-workout-btn' onClick={() => setIsEditing(true)}><FaRegEdit/></button>\n                   \n                </>\n        \n            }\n                <button type='button' className='delete-workout-btn' value={editWorkout.id} onClick={props.handleDelete}><FaTrash/></button>\n        </div>\n    )\n\n}\n\n\nfunction Workouts(props) {\n    const [workouts, setWorkouts] = useState([]);\n    const [show, setShow] = useState(false);\n    const [text, setText] = useState('');\n    const [date, setDate] = useState((new Date()).toISOString().substr(0,10));\n\n    useEffect(() => {\n        async function getWorkouts() {\n            const response = await fetch(`/api_v1/workouts/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                setWorkouts(data);\n            }\n        }\n        getWorkouts();\n    }, []);\n\n    const handleUpdate = async (workout) => {\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n                'Content-Type' : 'application/json',\n            },\n            body: JSON.stringify(workout)\n        };\n\n        const response = await fetch(`/api_v1/workouts/${workout.id}/`, options);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const updatedWorkouts = [...workouts];\n            const index = updatedWorkouts.findIndex(e => e.id === workout.id);\n            updatedWorkouts[index] = workout;\n            setWorkouts(updatedWorkouts);\n        }\n    }\n\n    const handleDelete = async (event) => {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(`/api_v1/workouts/${event.currentTarget.value}/`, options);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            let updatedWorkouts = [...workouts];\n            const index = updatedWorkouts.findIndex(e => e.id == event.target.value);\n            updatedWorkouts.splice(index, 1);\n            setWorkouts(updatedWorkouts);\n        }\n    }\n\n    function handleError(error) {\n        console.warn(error)\n    }\n\n    async function handleSubmit() {\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),           \n            },\n            body: JSON.stringify({\n                date,\n                text,\n            })\n        };\n\n        const response = await fetch(`/api_v1/workouts/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const data = await response.json();\n            setShow(false);\n            setText('');\n            setWorkouts([...workouts, data]);\n        }\n    }\n\n    const handleAdd = () => setShow(true)\n    const handleClose = () => setShow(false)\n\n    if(!workouts) {\n        return <div>spinner thingy</div>\n    }\n\n    const WorkoutListHTML = workouts.map(workout => \n       <WorkoutDetail\n            key={workout.id}\n            workout={workout}\n            handleDelete={handleDelete}\n            handleUpdate={handleUpdate}/>\n        )\n\n    return(\n        <>\n            <div className='workout-container'>\n                \n                <section className='workout-list'>\n                    <h3>Adult Performance Workouts</h3>\n                    {WorkoutListHTML}\n                    <button type='button' className='add-workout-btn' onClick={handleAdd}>Add Workout <FaRegPlusSquare/></button>\n                </section>\n                \n                <section className='class-list'>\n                    <h3>Adult Performance Group Training</h3>\n                    <Sessions/>\n                </section>\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add New Workout</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Date:</Form.Label>\n                        <Form.Control type='date' name='workout-date' value={date} min={date} onChange={(e) => setDate(e.target.value)}></Form.Control>\n                        <Form.Label>Workout:</Form.Label>\n                        <Form.Control type='text' as='textarea' rows={10} onChange={(e) => setText(e.target.value)} name='text' value={text}>\n                        </Form.Control>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button type='button' variant='success' onClick={handleSubmit}>Add</Button>\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>        \n        </>\n    )\n}\n\nexport default withRouter(Workouts);","import { withRouter, useParams, NavLink } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\n\n\nfunction Clients(props) {\n    const {filter} = useParams();\n    \n    const [clients, setClients] = useState([]);\n    // const [selection, setSelection] = useState(filter);\n\n    useEffect (() => {\n        async function getClients() {\n            const response = await fetch(`/api_v1/accounts/profiles/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                setClients(data);\n                console.log(data);\n            }\n        }\n        getClients();\n    }, []);\n\n    const ClientHTML = clients\n    .filter(client => filter === 'pt' ? client.is_client : client)\n    .map(client => \n        <div key={client.id} className='client-profile'>\n            <img className='client-photo' src={client.avatar} alt=''/>\n            <p>{client.first_name} {client.last_name}</p>\n            <p>Primary phone: {client.phone_number}</p>\n            <p>Primary email: {client.email}</p>\n            <p>Client Notes: {client.details}</p>\n            <p>PT Coach: {client.coach_name}</p>\n\n        </div>\n    \n        )\n        \n    \n    return (\n        <div className='client-container'>\n            <nav className='client-nav'>\n                <NavLink to='/clients/'>All Members</NavLink>\n                <NavLink to='/clients/pt/'>Personal Training Clients</NavLink>\n            </nav>\n            <section className='client-list'>\n                {ClientHTML}\n            </section>\n        </div>\n    )\n}\n\nexport default withRouter(Clients)","import {useEffect, useState} from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\nimport './App.css';\nimport PrivateRoute from './../PrivateRoute/PrivateRoute'\nimport RegistrationForm from './../Registration/RegistrationForm';\nimport LoginForm from './../Login/LoginForm';\nimport MainHeader from './../Header/MainHeader';\nimport LandingPage from './../Landing/LandingPage';\nimport Dashboard from './../Dashboard/Dashboard';\nimport DashboardHeader from './../Header/DashboardHeader';\nimport CommunityCalendar from './../Calendar/CommunityCalendar';\nimport Workout from './../Workout/Workout';\nimport Clients from './../Clients/Clients';\nimport Cookies from 'js-cookie';\n\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/');\n      if(!response.ok) {\n        setUser({isAuth: false});\n      } else {\n        const data = await response.json();\n        setUser({...data, isAuth: true, isAdmin: data.is_staff})\n      }\n    }\n    checkAuth();\n  }, [history]);\n\n  async function handleLogout(event, props) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n    const response = await fetch('/rest-auth/logout/', options);\n    if (!response.ok) {\n      console.log(response);\n    } else {\n      const data = await response.json();\n      Cookies.remove('Authorization');\n      setUser({isAuth:false});\n      history.push('/');\n    }\n  }\n\n \n\n  if(!user) {\n    return <div>I am loading!</div>\n  }\n\n  const isAuth = user?.isAuth;\n  const isAdmin = user?.isAdmin;\n  const username = user?.username;\n  console.log('user', user);\n  console.log(isAdmin);\n  console.log(username);\n\n  return (\n    <>\n      <MainHeader isAuth={isAuth} isAdmin={isAdmin} handleLogout={handleLogout}/>\n      {isAuth && <DashboardHeader username={username} isAdmin={isAdmin}/> }\n      <Switch>\n        <Route path='/registration'>\n          <RegistrationForm isAuth={isAuth} setUser={setUser}/>\n        </Route>\n        <Route path='/login'>\n          <LoginForm isAuth={isAuth} isAdmin={isAdmin} setUser={setUser}/>\n        </Route>\n        <PrivateRoute path='/dashboard' isAuth={isAuth} isAdmin={isAdmin}>\n          <Dashboard/>\n        </PrivateRoute>\n        <PrivateRoute path='/clients/:filter?' isAuth={isAuth} isAdmin={isAdmin}>\n          <Clients/>\n        </PrivateRoute>\n        <PrivateRoute path='/calendar' isAuth={isAuth} isAdmin={isAdmin}>\n          <CommunityCalendar/>\n        </PrivateRoute>\n        <PrivateRoute path='/workouts' isAuth={isAuth} isAdmin={isAdmin}>\n          <Workout/>\n        </PrivateRoute>\n        <Route path='/' exact>\n          <LandingPage isAuth={isAuth} isAdmin={isAdmin}/>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}