{"version":3,"sources":["components/PrivateRoute/PrivateRoute.js","components/Registration/RegistrationForm.js","components/Login/LoginForm.js","components/Header/MainHeader.js","components/Landing/LandingPage.js","components/Dashboard/DashCalendar.js","components/Dashboard/TaskList.js","components/Dashboard/Dashboard.js","components/Header/DashboardHeader.js","components/Calendar/CommunityCalendar.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","isAuth","props","to","withRouter","useState","username","email","password1","password2","user","setUser","setError","handleInput","event","target","name","value","prevState","handleError","error","console","warn","a","preventDefault","log","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","ok","json","data","set","key","history","push","className","onSubmit","htmlFor","type","id","placeholder","required","onChange","password","Header","src","alt","onClick","handleLogout","defaultEvent","title","start","end","allDay","gymEvent","details","locales","enUS","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","show","setShow","events","setEvents","setEvent","handleChange","useHistory","checked","e","Date","updatedEvents","index","findIndex","splice","useEffect","formatedEvents","map","getEvents","handleClose","selectable","startAccessor","endAccessor","min","max","defaultView","views","onSelectSlot","onSelectEvent","style","height","Modal","onHide","closeButton","Title","Body","Form","Group","Label","Control","plaintext","readOnly","Check","label","Footer","Button","variant","TaskDetail","isEditing","setIsEditing","task","text","editText","setEditText","complete","toggleCompletion","udpatedTask","handleUpdate","handleDelete","tasks","setTasks","setText","getTasks","updatedTasks","TaskListHTML","remove","checkAuth","isAdmin","is_staff","MainHeader","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ff17b6d.chunk.js","sourcesContent":["import {Route, Redirect} from 'react-router-dom'\n\nfunction PrivateRoute({isAuth, ...props}) {\n    return isAuth ? <Route {...props}/> : <Redirect to='/login'/>\n}\n\nexport default PrivateRoute","import {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction RegistrationForm(props) {\n    const [user,setUser] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2:'',\n    });\n\n    const [error, setError] = useState(null)\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    function handleError(error) {\n        console.warn(error)\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        console.log('user', user)\n        if(user.password1 !== user.password2) {\n            setError('Passwords do not match!')\n        } else {\n            const options = {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n                body: JSON.stringify(user)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setUser((prevState) => ({\n                    ...prevState, isAuth: true,\n                }));\n                props.history.push('/');\n            }\n        }\n    }\n\n    // if(props.isAuth) {\n    //     return <Redirect to='/' />\n    // }\n\n    return (\n        <form className='mt-3 col-4 offset-lg-4 register-form' onSubmit={handleSubmit}>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='username'>Username</label>\n                <input\n                    type='text'\n                    className='form-control'\n                    id='username'\n                    placeholder='Enter Username'\n                    required\n                    name='username'\n                    value={user.username}\n                    onChange={handleInput}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='email'>Email</label>\n                <input\n                    type='email'\n                    className='form-control'\n                    id='email'\n                    placeholder='Enter Email'\n                    required\n                    name='email'\n                    value={user.email}\n                    onChange={handleInput}\n                    />\n            </div><div className='form-group text-left mb-3'>\n                <label htmlFor='password1'>Password 1</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password1'\n                    placeholder='Enter Password'\n                    required\n                    name='password1'\n                    value={user.password1}\n                    onChange={handleInput}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password2'>Password 2</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password2'\n                    placeholder='Confirm Password'\n                    required\n                    name='password2'\n                    value={user.password2}\n                    onChange={handleInput}\n                    />\n            </div>\n            <button type='submit' className='btn btn-primary mt-3' id='register-button'>Register</button>\n        </form>\n    )\n}\n\nexport default withRouter(RegistrationForm)","import {useState} from 'react';\nimport {withRouter, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props) {\n    const [user, setUser] = useState({\n        username: '',\n        password: '',\n    });\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method:'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(user)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`);\n            props.setUser((prevState) => ({\n                ...prevState,\n                isAuth:true,\n            }));\n            props.history.push('/dashboard/');\n        }\n    }\n\n    if(props.isAuth) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <form className='mt-3 col-4 offset-lg-4 login-form' onSubmit={handleSubmit}>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='username'>Username</label>\n                <input\n                    type='text'\n                    className='form-control'\n                    id='username'\n                    placeholder='Enter Username'\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={user.username}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password'>Password</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password'\n                    placeholder='Enter Password'\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={user.password}\n                    />\n            </div>\n            <button type='submit' className='btn btn-primary' id='login-button'>Login</button>\n        </form>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { NavLink } from 'react-router-dom';\n\nfunction Header(props) {\n    return(\n        <nav className='navbar navbar-expand-lg navbar-dark bg-dark' id='header-nav'>\n            <div className='container'>\n                <img className='navbar-brand' src='images/kpf_logo.jpeg' alt='logo'/>\n                <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarResponsive' aria-controls='navbarResponsive' aria-expanded='false' aria-label='Toggle navigation'>\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse' id='navbar-responsive'>\n                    <ul className='navbar-nav ml-auto' className='container d-flex justify-content-end' id='main-nav'>\n                        {props.isAuth && (\n                            <li className='nav-item' id='dashboard-btn'>\n                                <NavLink to='/dashboard'>Dashboard</NavLink>\n                            </li>\n                        )}\n                        {props.isAuth && (\n                            <button type='submit' className='logout' onClick={() => props.handleLogout()}>Logout</button>\n                        )}\n                    </ul>\n                </div>\n            </div> \n\n        </nav>\n    )\n}\n\nexport default Header","import { NavLink, withRouter } from 'react-router-dom';\n\nfunction LandingPage() {\n    return (\n        <>\n        <div className='landing-body'>\n            <section>#alwaysimproving</section>\n            <aside>\n                <h4>New to the Factory?</h4>\n                <div className='landing-atag'>\n                    <NavLink to='/registration'>Register Here</NavLink>\n                </div>\n                <h4>Back for more? Welcome back.</h4>\n                <div className='landing-atag'>\n                    <NavLink to='/login'>Login Here</NavLink>\n                </div>\n            </aside>\n        </div>\n        </>\n    )\n}\n\nexport default withRouter(LandingPage)","import {useState, useEffect} from 'react';\nimport {withRouter, useHistory} from 'react-router-dom';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Modal, Button, Form} from 'react-bootstrap'\nimport Cookies from 'js-cookie';\n\n\nconst defaultEvent = {\n    title:'',\n    start: null,\n    end: null,\n    allDay: false,\n    gymEvent: false,\n    details:'',\n}\n\nconst locales = {\n    'en-US': enUS\n};\n\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\n\nfunction DashCalendar() {\n    const [show, setShow] = useState(false);\n    const [events, setEvents] = useState();\n    const [event, setEvent] = useState(defaultEvent);\n\n    const history = useHistory()\n    \n    const handleChange = (event) => {\n       \n        if(event.target.type === \"checkbox\") {\n            setEvent((prevState) => ({\n                ...prevState,\n                [event.target.name]: event.target.checked,\n            }));\n            return;\n        }\n       \n        const { name, value } = event.target;\n        setEvent((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    useEffect(() => {\n        async function getEvents() {\n            const response = await fetch(`/api_v1/events/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                const formatedEvents = data.map(event => ({...event, start: new Date(event.start), end: new Date(event.end)}));\n                setEvents(formatedEvents);\n                console.log(formatedEvents)\n            }\n        }\n        getEvents();\n    },[]);\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e){\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.start = new Date(data.start);\n            data.end = new Date(data.end);\n            setShow(false);\n            setEvent(defaultEvent);\n            setEvents([...events, data]);\n        }\n    }\n\n    async function handleUpdate() {\n        \n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/${event.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            setShow(false);\n            const updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents[index] = event;\n            setEvents(updatedEvents);\n            setEvent(defaultEvent);\n        }\n    }\n\n    async function handleDelete() {\n        const response = await fetch(`/api_v1/events/${event.id}/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);  \n            setShow(false);\n        }         \n    }\n\n\n    const handleClose = () => {\n        setShow(false);\n        setEvent(defaultEvent);\n    }\n    const handleSelection = (event) => {\n        setShow(true);\n        setEvent((prevState) => ({\n            ...prevState,\n            start: event.start,\n            end: event.end,\n        }));\n        \n    }\n\n    const handleEventSelect = (event) => {\n        setEvent({\n            ...event, \n            title: event.title,\n            start: event.start,\n            end:event.end,\n            details: event.details,\n        });\n        setShow(true);\n    }\n    \n    if(!events) {\n        return <div>loading</div>\n    }\n    return (\n        <>\n            <div className=\"daily-cal\">\n                <Calendar\n                    selectable={true}\n                    localizer={localizer}\n                    events={events}\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    min={new Date(0,0,0,5,0,0)}\n                    max={new Date(0,0,0,22,0,0)}\n                    defaultView={\"week\"}\n                    views={['week', 'day']}\n                    onSelectSlot={handleSelection}\n                    onSelectEvent={handleEventSelect}\n                    style={{ height: 500 }}\n                    />\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Title: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"title\" value={event.title} placeholder='Event Title'></Form.Control>\n                        <Form.Label>Start: </Form.Label><Form.Control plaintext readOnly name=\"start\" value={event.start}></Form.Control>\n                        <Form.Label>End: </Form.Label><Form.Control plaintext readOnly name=\"end\" value={event.end}></Form.Control>\n                        <Form.Label>Details: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"details\" value={event.details} placeholder='Event details...'></Form.Control>\n                        <Form.Check type='checkbox' label='All Day' name=\"allDay\" checked={event.allDay} onChange={handleChange}></Form.Check>\n                        <Form.Check type='checkbox' label='Community Event' name=\"gymEvent\" checked={event.gymEvent} onChange={handleChange}></Form.Check>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    {event.id \n                    ? \n                    <>\n                        <Button type='button' variant='warning' onClick={handleUpdate} >Update</Button>\n                        <Button type='button' variant='dark' onClick={handleDelete}>Delete</Button>\n                    </>\n                    :\n                        <Button type='button' variant='success' onClick={handleSubmit}>Save</Button>\n                    }\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default withRouter(DashCalendar)","import { withRouter } from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport Cookies from 'js-cookie';\nimport {Modal, Button, Form} from 'react-bootstrap'\n\nfunction TaskDetail(props) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editText, setEditText] = useState(props.task.text);\n    const {id, text, complete} = props.task;\n\n    const handleChange = (event) => {\n        setEditText(event.target.value);\n    }\n\n    const handleUpdate = (event) => {\n        const udpatedTask = {...props.task, text: editText}\n        props.handleUpdate(udpatedTask);\n        setIsEditing(false);\n    }\n\n    return (\n        <div className='task-item'>\n            <input type='checkbox' checked={complete} name=\"complete\" onChange={props.toggleCompletion} value={id} />\n            {\n                isEditing ?\n                <input type=\"text\" name=\"editText\" value={editText} onChange={handleChange} /> :\n                <label>{text}</label>\n            }\n           \n            {\n                isEditing ? \n                <button type='button' className='edit-task-btn' onClick={handleUpdate}>save</button> :\n                <button type='button' className='edit-task-btn' onClick={() => setIsEditing(true)}>edit</button>\n            }\n            <button type='button' className='delete-task-btn' onClick={props.handleDelete} value={id}>x</button>\n        </div>\n    )\n}\n\n\nfunction TaskList(props) {\n    const [tasks, setTasks] = useState([]);\n    const [show, setShow] = useState(false);\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        async function getTasks() {\n            const response = await fetch(`/api_v1/tasks/`);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                \n                setTasks(data);\n            }\n        }\n        getTasks();\n    }, []);\n\n    const handleUpdate = async (task) => {\n        // console.log('are you updated', task);\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken' : Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(task)\n        };\n\n        const response = await fetch(`/api_v1/tasks/${task.id}/`, options);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const updatedTasks = [...tasks];\n            const index = updatedTasks.findIndex(e => e.id === task.id);\n            updatedTasks[index] = task;\n            setTasks(updatedTasks);\n\n        }\n    }\n\n    const handleDelete = async (event) => {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(`/api_v1/tasks/${event.target.value}/`, options);\n        \n        if (!response.ok) {\n            console.log(response);\n        } \n    }\n\n    const toggleCompletion = async (event) => {\n        const updatedTasks = [...tasks];\n        const id = event.target.value;\n        const index = updatedTasks.findIndex(task => task.id == event.target.value);\n\n        updatedTasks[index].complete = !updatedTasks[index].complete;\n        setTasks(updatedTasks);\n\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                complete: updatedTasks[index].complete\n            }),\n        };\n        const response = await fetch(`/api_v1/tasks/${id}/`, options);\n        \n        if (!response.ok) {\n            console.log(response);\n        } \n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e) {\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({text})\n        };\n\n        const response = await fetch(`/api_v1/tasks/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            const data = await response.json();\n            setShow(false);\n            setText('');\n            setTasks([...tasks, data]);\n        }\n    }\n\n    const handleAdd = () => setShow(true)\n    const handleClose = () => setShow(false)\n\n    if(!tasks) {\n        return <div>spinner thingy</div>\n    }\n\n    const TaskListHTML = tasks.map(task =>\n        <TaskDetail \n            key={task.id} \n            task={task}\n            toggleCompletion={toggleCompletion} \n            handleDelete={handleDelete}\n            handleUpdate={handleUpdate}\n            />\n        )\n\n\n    return (\n        <>\n            <div className='task-container'>\n                <h4>Tasks</h4>\n                {TaskListHTML}\n                <button type=\"button\" className='add-task-btn' onClick={handleAdd}>+</button>\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Task:</Form.Label><Form.Control type='text' onChange={(e) => setText(e.target.value)} name='text' value={text}></Form.Control>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button type='button' variant='success' onClick={handleSubmit}>Add</Button>\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default withRouter(TaskList)","import {withRouter} from 'react-router-dom'\nimport DashCalendar from './DashCalendar'\nimport TaskList from './TaskList'\n\nfunction Dashboard() {\n\n    return(\n        <>\n        <main className='dashboard-main'>\n                <DashCalendar/>\n                <TaskList/>\n        </main>\n        </>\n    )\n}\n\nexport default withRouter(Dashboard)","import { NavLink, withRouter } from 'react-router-dom'\n\nfunction DashboardHeader(props) {\n    return (\n        <>\n        <header className=\"dash-header\">Welcome {props.username}!  Today is [date] </header>\n        <nav className='navbar navbar-expand-lg navbar-dark bg-dark' id='dash-header'>\n            <div className='container d-flex justify-content-center'>\n                <ul className='navbar-nav' id='dash-nav'>\n                    <li className='nav-item'>\n                        <NavLink to='/dashboard'>Dashboard</NavLink>\n                    </li>\n                    <li className='nav-item'>\n                        <NavLink to='/clients'>Clients</NavLink>\n                    </li>\n                    <li className='nav-item'>\n                        <NavLink to='/calendar'>Event Calendar</NavLink>\n                    </li>\n                    <li className='nav-item'>\n                        <NavLink to='/workouts'>Workouts + Classes</NavLink>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n        </>\n    )\n}\n\nexport default withRouter(DashboardHeader)","import { withRouter, useHistory } from \"react-router\";\nimport { useState, useEffect } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Modal, Button, Form} from 'react-bootstrap'\nimport Cookies from 'js-cookie';\n\nconst defaultEvent = {\n    title:'',\n    start: null,\n    end: null,\n    allDay: false,\n    gymEvent: false,\n    details:'',\n}\n\nconst locales = {\n    'en-US': enUS\n};\n\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\n\nfunction CommunityCalendar() {\n    const [events, setEvents] = useState();\n    const [event, setEvent] = useState(defaultEvent);\n    const [show, setShow] = useState(false);\n\n    const history = useHistory()\n    \n    const handleChange = (event) => {\n       \n        if(event.target.type === \"checkbox\") {\n            setEvent((prevState) => ({\n                ...prevState,\n                [event.target.name]: event.target.checked,\n            }));\n            return;\n        }\n       \n        const { name, value } = event.target;\n        setEvent((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n    useEffect(() => {\n        async function getEvents() {\n            const response = await fetch(`/api_v1/events/`);\n            if(!response.ok) {\n                console.log(response)\n            } else {\n                const data = await response.json();\n                const formatedEvents = data.map(event => ({...event, start: new Date(event.start), end: new Date(event.end)}));\n                setEvents(formatedEvents);\n            }\n        }\n        getEvents();\n    }, []);\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(e){\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.start = new Date(data.start);\n            data.end = new Date(data.end);\n            setShow(false);\n            setEvent(defaultEvent);\n            setEvents([...events, data]);\n        }\n    }\n\n    async function handleUpdate() {\n        \n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(event)\n        };\n\n        const response = await fetch(`/api_v1/events/${event.id}/`, options).catch(handleError);\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            setShow(false);\n            const updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents[index] = event;\n            setEvents(updatedEvents);\n            setEvent(defaultEvent);\n        }\n    }\n\n    async function handleDelete() {\n        const response = await fetch(`/api_v1/events/${event.id}/`, {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        });\n\n        if(!response.ok) {\n            console.log(response)\n        } else {\n            let updatedEvents = [...events];\n            const index = updatedEvents.findIndex(e => e.id === event.id);\n            updatedEvents.splice(index, 1);\n            setEvents(updatedEvents);  \n            setShow(false);\n        }         \n    }\n\n    const handleClose = () => {\n        setShow(false);\n        setEvent(defaultEvent);\n    }    \n    const handleSelection = (event) => {\n        setShow(true);\n        setEvent((prevState) => ({\n            ...prevState,\n            start: event.start,\n            end: event.end,\n        }));     \n    }\n\n    const handleEventSelect = (event) => {\n        setEvent({\n            ...event, \n            title: event.title,\n            start: event.start,\n            end:event.end,\n            details: event.details,\n        });\n        setShow(true);\n    }\n\n    if(!events) {\n        return <div>loading</div>\n    }\n    return (\n        <>\n            <h2>Community Events Calendar</h2>\n            <div className=\"monthly-cal\">\n                <Calendar\n                    selectable={true}\n                    localizer={localizer}\n                    events={events}\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    min={new Date(0,0,0,5,0,0)}\n                    max={new Date(0,0,0,22,0,0)}\n                    defaultView={\"month\"}\n                    views={['month','week']}\n                    onSelectSlot={handleSelection}\n                    onSelectEvent={handleEventSelect}\n                    style={{ height: 700 }}\n                    />\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Title: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"title\" value={event.title} placeholder='Event Title'></Form.Control>\n                        <Form.Label>Start: </Form.Label><Form.Control name=\"start\" value={event.start}></Form.Control>\n                        <Form.Label>End: </Form.Label><Form.Control name=\"end\" value={event.end}></Form.Control>\n                        <Form.Label>Details: </Form.Label><Form.Control type='text' onChange={handleChange} name=\"details\" value={event.details} placeholder='Event details...'></Form.Control>\n                        <Form.Check type='checkbox' label='All Day' name=\"allDay\" checked={event.allDay} onChange={handleChange}></Form.Check>\n                        <Form.Check type='checkbox' label='Community Event' name=\"gymEvent\" checked={event.gymEvent} onChange={handleChange}></Form.Check>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    {event.id \n                    ? \n                    <>\n                        <Button type='button' variant='warning' onClick={handleUpdate} >Update</Button>\n                        <Button type='button' variant='dark' onClick={handleDelete}>Delete</Button>\n                    </>\n                    :\n                        <Button type='button' variant='success' onClick={handleSubmit}>Save</Button>\n                    }\n                    <Button type='button' variant='danger' onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n\n        </>\n    )\n}\n\nexport default withRouter(CommunityCalendar)","import {useEffect, useState} from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\nimport './App.css';\nimport PrivateRoute from './../PrivateRoute/PrivateRoute'\nimport RegistrationForm from './../Registration/RegistrationForm';\nimport LoginForm from './../Login/LoginForm';\nimport MainHeader from './../Header/MainHeader';\nimport LandingPage from './../Landing/LandingPage';\nimport Dashboard from './../Dashboard/Dashboard';\nimport DashboardHeader from './../Header/DashboardHeader';\nimport CommunityCalendar from './../Calendar/CommunityCalendar';\nimport Cookies from 'js-cookie';\n\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/');\n      if(!response.ok) {\n        setUser({isAuth: false});\n      } else {\n        const data = await response.json();\n        setUser({...data, isAuth: true, isAdmin: data.is_staff})\n      }\n    }\n    checkAuth();\n  }, [history]);\n\n  async function handleLogout(event, props) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n    const response = await fetch('/rest-auth/logout/', options);\n    if (!response.ok) {\n      console.log(response);\n    } else {\n      const data = await response.json();\n      Cookies.remove('Authorization');\n      setUser({isAuth:false});\n      history.push('/');\n    }\n  }\n\n  const isAuth = user?.isAuth;\n  const isAdmin = user?.isAdmin;\n  const username = user?.username;\n\n  return (\n    <>\n      <MainHeader isAuth={isAuth} isAdmin={isAdmin} handleLogout={handleLogout}/>\n      <Switch>\n        <Route path='/registration'>\n          <RegistrationForm isAuth={isAuth} setUser={setUser}/>\n        </Route>\n        <Route path='/login'>\n          <LoginForm isAuth={isAuth} setUser={setUser}/>\n        </Route>\n        <PrivateRoute path='/dashboard' isAuth={isAuth} isAdmin={isAdmin}>\n          <DashboardHeader username={username}/>\n          <Dashboard/>\n        </PrivateRoute>\n        <PrivateRoute path='/calendar' isAuth={isAuth} isAdmin={isAdmin}>\n          <DashboardHeader username={username}/>\n          <CommunityCalendar/>\n        </PrivateRoute>\n        <Route path='/' exact>\n          <LandingPage isAuth={isAuth} isAdmin={isAdmin}/>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}