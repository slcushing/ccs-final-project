{"version":3,"sources":["components/Registration/RegistrationForm.js","components/Login/LoginForm.js","components/Header/Header.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","username","email","password1","password2","user","setUser","setError","handleInput","event","target","name","value","prevState","handleError","error","console","warn","a","preventDefault","log","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","ok","json","data","set","key","isAuth","history","push","to","className","onSubmit","htmlFor","type","id","placeholder","required","onChange","password","Header","href","useHistory","useEffect","checkAuth","isAdmin","is_staff","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fddf448.chunk.js","sourcesContent":["import {useState} from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction RegistrationForm(props) {\n    const [user,setUser] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2:'',\n    });\n\n    const [error, setError] = useState(null)\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    function handleError(error) {\n        console.warn(error)\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        console.log('user', user)\n        if(user.password1 !== user.password2) {\n            setError('Passwords do not match!')\n        } else {\n            const options = {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n                body: JSON.stringify(user)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response.ok) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setUser((prevState) => ({\n                    ...prevState, isAuth: true,\n                }));\n                props.history.push('/');\n            }\n        }\n    }\n\n    if(props.isAuth) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <form className='mt-3 col-4 offset-lg-4 register-form' onSubmit={handleSubmit}>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='username'>Username</label>\n                <input\n                    type='text'\n                    className='form-control'\n                    id='username'\n                    placeholder='Enter Username'\n                    required\n                    name='username'\n                    value={user.username}\n                    onChange={handleInput}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='email'>Email</label>\n                <input\n                    type='email'\n                    className='form-control'\n                    id='email'\n                    placeholder='Enter Email'\n                    required\n                    name='email'\n                    value={user.email}\n                    onChange={handleInput}\n                    />\n            </div><div className='form-group text-left mb-3'>\n                <label htmlFor='password1'>Password 1</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password1'\n                    placeholder='Enter Password'\n                    required\n                    name='password1'\n                    value={user.password1}\n                    onChange={handleInput}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password2'>Password 2</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password2'\n                    placeholder='Confirm Password'\n                    required\n                    name='password2'\n                    value={user.password2}\n                    onChange={handleInput}\n                    />\n            </div>\n            <button type='submit' className='btn btn-primary mt-3' id='register-button'>Register</button>\n        </form>\n    )\n}\n\nexport default withRouter(RegistrationForm)","import {useState} from 'react';\nimport {withRouter, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props) {\n    const [user, setUser] = useState({\n        username: '',\n        password: '',\n    });\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method:'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(user)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response.ok) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`);\n            props.setUser((prevState) => ({\n                ...prevState,\n                isAuth:true,\n            }));\n            props.history.push('/dashboard/');\n        }\n    }\n\n    if(props.isAuth) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <form className='mt-3 col-4 offset-lg-4 login-form' onSubmit={handleSubmit}>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='username'>Username</label>\n                <input\n                    type='text'\n                    className='form-control'\n                    id='username'\n                    placeholder='Enter Username'\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={user.username}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password'>Password</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    id='password'\n                    placeholder='Enter Password'\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={user.password}\n                    />\n            </div>\n            <button type='submit' className='btn btn-primary' id='login-button'>Login</button>\n        </form>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { NavLink } from 'react-router-dom';\n\nfunction Header(props) {\n    return(\n        <nav className='navbar navbar-expand-lg navbar-dark bg-dark' id='header-nav'>\n            <div className='container'>\n                <a className='navbar-brand' href='/'>KPF</a>\n                <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarResponsive' aria-controls='navbarResponsive' aria-expanded='false' aria-label='Toggle navigation'>\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n            </div>\n\n        </nav>\n    )\n}\n\nexport default Header","import {useEffect, useState} from 'react';\nimport {Route, Switch, withRouter, useHistory} from 'react-router-dom';\nimport './App.css';\nimport RegistrationForm from './../Registration/RegistrationForm';\nimport LoginForm from './../Login/LoginForm';\nimport Header from './../Header/Header';\nimport LandingPage from './../Landing/LandingPage';\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/');\n      if(!response.ok) {\n        setUser({isAuth: false});\n      } else {\n        const data = await response.json();\n        setUser({isAuth: true, isAdmin: data.is_staff})\n      }\n    }\n    checkAuth();\n  }, [history]);\n\n  const isAuth = user?.isAuth;\n  const isAdmin = user?.isAdmin;\n\n  return (\n    <>\n      <Header isAuth={isAuth} isAdmin={isAdmin}/>\n      <Switch>\n        {/* <Route path='/'>\n          <LandingPage/>\n        </Route> */}\n        <Route path='/registration'>\n          <RegistrationForm isAuth={isAuth} setUser={setUser}/>\n        </Route>\n        <Route path='/login'>\n          <LoginForm isAuth={isAuth} setUser={setUser}/>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}